version: '3'
# 网络
networks:
  backend:
    driver: "bridge"
# 服务
services:

############################### php-fpm ###############################
  php-fpm:
    build:
      context: ./php/${PHP_VERSION}/fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php/${PHP_VERSION}/fpm/php.ini:/usr/local/etc/php/php.ini
      - ./php/${PHP_VERSION}/fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./php/${PHP_VERSION}/fpm/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
      - ./php/${PHP_VERSION}/fpm/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./php/${PHP_VERSION}/fpm/mysql.ini:/usr/local/etc/php/conf.d/mysql.ini
      # 项目地址映射
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      # 日志地址映射
      - ${PHP_LOG_PATH}:/var/log/php/
    networks:
      - backend
    expose:
      - "9000"

############################### NGINX ###############################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy

    volumes:
      # 项目地址映射
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      # 日志地址映射
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      # 配置文件映射
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      # ssl
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - backend

############################### Redis ###############################
  redis:
    build:
      context: ./redis/${REDIS_VERSION}/
    volumes:
      - ./redis/${REDIS_VERSION}/redis.conf:/usr/local/etc/redis/redis.conf
      - ${REDIS_DATA_PATH}:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

############################### Mysql ###############################
  mysql:
    build:
      context: ./mysql/${MYSQL_VERSION}/
      args:
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ${MYSQL_DATA}:/mysql/data/
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

############################### mongodb ###############################
  mongodb:
    build:
      context: ./mongodb/${MONGODB_VERSION}/
    volumes:
      - ${MONGODB_DATA}:/data/db
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - backend

############################### ES ###############################
  elasticsearch:
    build:
      context: ./elasticsearch/

    environment:
      - bootstrap.memory_lock=true
      # 设置堆内存的，以及最大使用堆内存
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        #指定文件句柄数（软限制，应用可以随时更改，但不能超过硬限制）
        soft: 2000
        # 系统硬限制，只能root用户提高
        hard: 3000
    volumes:
      - ${ES_DATA}:/usr/share/elasticsearch/data
    ports:
      - ${ES_HTTP_PORT}:9200
    networks:
      - backend

############################### kibana ###############################

  kibana:
    build:
      context: ./kibana/

#    volumes:
#      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - backend
